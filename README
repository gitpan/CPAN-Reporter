NAME
    CPAN::Reporter - Provides Test::Reporter support for CPAN.pm

VERSION
    This documentation describes version 0.18.

SYNOPSIS
    From the CPAN shell:

      cpan> install CPAN::Reporter
      cpan> reload cpan
      cpan> o conf init test_report

DESCRIPTION
    CPAN::Reporter is an add-on for the CPAN.pm module that uses
    Test::Reporter to send the results of module tests to the CPAN Testers
    project. Support for CPAN::Reporter is available in CPAN.pm version
    1.88.

    The goal of the CPAN Testers project ( <http://testers.cpan.org/> ) is
    to test as many CPAN packages as possible on as many platforms as
    possible. This provides valuable feedback to module authors and
    potential users to identify bugs or platform compatibility issues and
    improves the overall quality and value of CPAN.

    One way individuals can contribute is to send test results for each
    module that they test or install. Installing CPAN::Reporter gives the
    option of automatically generating and emailing test reports whenever
    tests are run via CPAN.pm.

GETTING STARTED
    The first step in using CPAN::Reporter is to install it using whatever
    version of CPAN.pm is already installed. CPAN.pm will be upgraded as a
    dependency if necessary.

      cpan> install CPAN::Reporter

    If CPAN.pm was upgraded, it needs to be reloaded.

      cpan> reload cpan

    If upgrading from a very old version of CPAN.pm, users may be prompted
    to renew their configuration settings, including the 'test_report'
    option to enable CPAN::Reporter.

    If not prompted automatically, users should manually initialize
    CPAN::Reporter support. After enabling CPAN::Reporter, CPAN.pm will
    automatically continue with interactive configuration of CPAN::Reporter
    options.

      cpan> o conf init test_report

    Once CPAN::Reporter is enabled and configured, test or install modules
    with CPAN.pm as usual.

CONFIG FILE OPTIONS
    Default options for CPAN::Reporter are read from a configuration file
    ".cpanreporter/config.ini" in the user's home directory (Unix), "My
    Documents" directory (Windows) or "~/Documents" directory (OS X). (See
    File::HomeDir and the "my_documents" method for config folder location
    on other operating systems.)

    The configuration file is in "ini" format, with the option name and
    value separated by an "=" sign

       email_from = "John Doe" <johndoe@nowhere.org>
       cc_author = no

    Options shown below as taking "yes/no/fail/ask" should be set to one of
    five values; the result of each is as follows:

    *   "yes" -- automatic yes

    *   "no" -- automatic no

    *   "fail" -- yes if the test result was failure/unknown; no otherwise

    *   "ask/no" or just "ask" -- prompt each time, but default to no

    *   "ask/yes" -- prompt each time, but default to yes

    For prompts, the default will be used if return is pressed immediately
    at the prompt or if the "PERL_MM_USE_DEFAULT" environment variable is
    set to a true value.

    Interactive configuration of required and standard options may be
    repeated at any time from the CPAN shell. Interactive configuration will
    also includes any additional options that already exist within the
    configuration file.

      cpan> o conf init test_report

    Descriptions for each option follow.

  Email Address (required)
    CPAN::Reporter requires users to provide an email address that will be
    used in the "From" header of the email to cpan-testers@perl.org.

    *   "email_from = <email address>" -- email address of the user sending
        the test report; it should be a valid address format, e.g.:

      user@domain
      John Doe <user@domain>
      "John Q. Public" <user@domain>

    Because "cpan-testers" uses a mailing list to collect test reports, it
    is helpful if the email address provided is subscribed to the list.
    Otherwise, test reports will be held until manually reviewed and
    approved.

    Subscribing an account to the cpan-testers list is as easy as sending a
    blank email to cpan-testers-subscribe@perl.org and replying to the
    confirmation email.

  Standard Options
    These options are included in the standard config file template that is
    automatically created.

    *   "cc_author = yes/no/fail/ask" -- should module authors should be
        sent a copy of the test report at their "author@cpan.org" address
        (default: fail)

    *   "edit_report = yes/no/fail/ask" -- edit the test report before
        sending (default: ask/no)

    *   "send_report = yes/no/fail/ask" -- should test reports be sent at
        all (default: ask/yes)

    *   "smtp_server = <server list>" -- one or more alternate outbound mail
        servers if the default perl.org mail servers cannot be reached (e.g.
        users behind a firewall); multiple servers may be given, separated
        with a space (default: none)

    Note that if "send_report" is set to "no", CPAN::Reporter will still go
    through the motions of preparing a report, but will discard it rather
    than send it. This is used for testing CPAN::Reporter.

    A better way to disable CPAN::Reporter temporarily is with the CPAN
    option "test_report":

      cpan> o conf test_report 0

  Additional Options
    These additional options are only necessary in special cases, such as
    for testing, debugging or if a default editor cannot be found.

    *   "email_to = <email address>" -- alternate destination for reports
        instead of "cpan-testers@perl.org"; used for testing (default: none)

    *   "editor = <editor>" -- editor to use to edit the test report; if not
        set, Test::Reporter will use environment variables "VISUAL",
        "EDITOR" or "EDIT" (in that order) to find an editor (default: none)

    *   "debug = <boolean>" -- turns debugging on/off (default: off)

FUNCTIONS
    CPAN::Reporter provides only two public function for use within CPAN.pm.
    They are not imported during "use". Ordinary users will never need them.

  "configure()"
      CPAN::Reporter::configure();

    Prompts the user to edit configuration settings stored in the
    CPAN::Reporter "config.ini" file. Will create the configuration file if
    it does not exist. Automatically called by CPAN.pm when initializing the
    'test_report' option:

      cpan> o conf init test_report

  "test()"
      CPAN::Reporter::test( $cpan_dist, $system_command );

    Given a CPAN::Distribution object and a system command to run
    distribution tests (e.g. "make test"), "test()" executes the command via
    "system()" while teeing the output to a file. Based on the output
    captured in the file, "test()" generates and sends a Test::Reporter
    report. It returns true if the captured output indicates that all tests
    passed and false, otherwise.

KNOWN ISSUES
    *   Does not (yet) support reporting on "test.pl" files; will issue a
        warning and continue

BUGS
    Please report any bugs or feature using the CPAN Request Tracker. Bugs
    can be submitted by email to bug-CPAN-Reporter@rt.cpan.org or through
    the web interface at
    <http://rt.cpan.org/Dist/Display.html?Queue=CPAN-Reporter>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    David A. Golden (DAGOLDEN)

    dagolden@cpan.org

    http://www.dagolden.org/

COPYRIGHT AND LICENSE
    Copyright (c) 2006 by David A. Golden

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

    The full text of the license can be found in the LICENSE file included
    with this module.

DISCLAIMER OF WARRANTY
    BECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
    FOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN
    OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
    PROVIDE THE SOFTWARE "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
    EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
    ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH
    YOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL
    NECESSARY SERVICING, REPAIR, OR CORRECTION.

    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
    REDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE LIABLE
    TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
    SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
    RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
    FAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
    SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
    DAMAGES.

