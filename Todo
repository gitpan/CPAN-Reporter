TODO list for Perl module CPAN::Reporter

#--------------------------------------------------------------------------#
# Bugs
#--------------------------------------------------------------------------#

- Check for failing configure_requires for downgrades

#--------------------------------------------------------------------------#
# Features, etc
#--------------------------------------------------------------------------#

# High priority


# Medium priority 

- check for how to confirm portability of setpgrp and kill

- add support for a "comment.txt" file in the config directory to use
  in place of the default comment

- add support for an 'opt-in' file for authors that want CC and then set
  default cc to none -- possibly kept in author's CPAN directory?

- 'force_prompt' config to locally unset PERL_MM_USE_DEFAULT (Rezic)

- add earlier, successful phases to output in reverse order.  Probably have to
  bump up the test-length cutoff, though, to deal with lengthy make output
    - Test phase output
    - make phase output
    - PL phase output

- For failure in PL stage -- show configure_requires and an error message
  that other requirements aren't available if PL fails

- add results back to CPAN::Distribution object

# Low priority

- refactor t/Helper.pm

- add warnings::compat to toolchain or else add config to allow local
  modules to be added to toolchain report
    - SAPER: 
        Hmm... ok. The fact is that warnings::compat isn't listed in
        Sys::Syslog prereqs, but it should in order to make it work under
        5.5. So I guess that Slaven manually installed it in his 5.5.5 smoker
        in order to ease the process, but in that case, it becomes (in a
        sense) part of the toolchain, because it masks a potentially missing
        prereq (this is what happened here). warnings::compat is a little
        special because it provides a way to make a core module available on
        old Perls. So maybe CPAN::Reporter should allow one to add locally
        installed modules in the toolchain section.
    - SREZIC:
        To add my 0.02EUR: maybe warnings::compat could/should be shown only
        if 5.5.x is used.

- change report truncation to take first 25K and last 25K (summary) (?)

- switch from a single flat file for history. e.g.
    - SDBM_File for history (key on subject line, with phase as value?
      Or key on distro name/perl with result and phase as value? ) -- but
      does it scale well?  (See MJD's article)
    - Or use sorted file with Search::Dict(?) -- (prefer this option,
      keeps search for non-existant line fast; insertion is a just a few
      block writes and a rename.) If we do this, need to put distro name
      first to make "have_tested()" easier to write
    - Use filesystem to index -- one file per distname? hash with directories
      to keep number of files/directory down?
    - Or flat file per perl/archname/osver (usually constant)
    - use File::ReadBackwards for searches on flat file

- Add interactive config for editor?

- Improve test coverage for utility subs and error handling

- Check email addresses for validity (cf. Email::Valid, etc.)

- Add other Config items like 'make' to report context

- heuristics for missing library files --> discard report ??

- figure out how to support color output from Test::Harness 3.0 -- probably
  set an environment variable to get them to pass color strings to the pipe
  and then strip color escape codes from the teed file.

# Probably won't implement

- add timeout to EU::MM prompts (RT#28034)

- remove File::Temp as a build_requires dependency

- Add config to save reports to a file (Jerry Hedden) (RT#24816)
    - may not do this until we have the new CPAN::Testers::Report
      object and associated transports

- Check if CPAN::Reporter is reporting under a "force X" command?  It
  probably shouldn't.  Is that a CPAN.pm change?  Or can I get it from 
  the dist object? ie. $dist->{force_update} (DAGOLDEN)  -- on reflection,
  as long as we're checking prereqs and discarding, this may be OK

- send duplicate report if using "report" (?) or "force" (?)

- ability to turn on/off via an environment variable (David Cantrell)

- ability to only report on what I asked to install, not on its dependencies
  (David Cantrell)
  - this is a CPAN issue -- it would need to be able to set test_report on
    a per-distribution basis

